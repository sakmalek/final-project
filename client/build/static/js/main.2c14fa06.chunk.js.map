{"version":3,"sources":["components/auth/Signup.js","context/auth.js","components/auth/Login.js","components/screenSplits/LeftSplit.js","components/MessagePost.js","components/screenSplits/RightSplit.js","components/Navigation.js","components/AddButton.js","components/SuggestionList.js","components/modals/AddChannel.js","components/modals/StartConversation.js","components/modals/EditProfile.js","components/screenSplits/Slack.js","components/auth/Verification.js","components/auth/Reset.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","navigate","useNavigate","useState","signupForm","setSignupForm","undefined","errorMessage","setErrorMessage","React","open","setOpen","storedToken","localStorage","getItem","handleClose","event","reason","Grid","item","xs","container","onSubmit","e","preventDefault","axios","post","headers","Authorization","then","catch","err","response","data","message","component","direction","alignItems","justifyContent","minHeight","minWidth","Paper","style","elevation","Typography","textAlign","sx","ml","mr","mt","mb","variant","gutterBottom","TextField","width","id","name","label","onChange","username","target","value","email","type","password","Button","to","Snackbar","autoHideDuration","onClose","Alert","severity","AuthContext","createContext","AuthProviderWrapper","props","isLoggedIn","setIsLoggedIn","user","setUser","isLoading","setIsLoading","verifyStoredToken","get","useEffect","Provider","loginUser","token","setItem","logoutUser","removeItem","children","Login","useContext","loginForm","setLoginForm","console","log","authToken","LeftSplit","channels","conversations","setConversationId","setChannelId","Accordion","m","backgroundColor","color","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","map","channel","Tooltip","title","description","placement","onClick","_id","conversation","Box","display","pb","borderRadius","alt","src","user_1_id","user_2_id","CircularProgress","position","top","left","MessagePost","conversationId","channelId","setPost","setMessage","height","requestBody","sender_id","conversation_id","channel_id","source","put","IconButton","p","InputBase","autoComplete","flex","placeholder","Divider","orientation","RightSplit","messages","setMessages","messagesEndRef","useRef","changeDateFormat","string","parsed","Date","parse","date","getDay","getMonth","getFullYear","getHours","getMinutes","scrollToBottom","current","scrollIntoView","behavior","Timeline","length","TimelineItem","TimelineOppositeContent","align","fontWeight","toUpperCase","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","fontSize","updatedAt","ref","bottom","pl","Navigation","openEditProfileModel","setOpenEditProfileModel","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","light","flexGrow","AppBar","Toolbar","size","edge","currentTarget","Badge","badgeContent","actions","icon","AddButton","openAddChannelModel","setOpenAddChannelModel","openStartConversationModel","setOpenStartConversationModel","lg","md","SpeedDial","ariaLabel","right","SpeedDialIcon","action","SpeedDialAction","tooltipTitle","getStyles","personName","theme","indexOf","typography","fontWeightRegular","fontWeightMedium","SuggestionList","users","setChannelMembers","channelMembers","useTheme","setPersonName","FormControl","InputLabel","Select","multiple","selectedUses","members","setMembers","split","input","OutlinedInput","transform","bgcolor","border","boxShadow","AddChannel","submitted","setSubmitted","owner_id","addChannelForm","setAddChannelForm","setUsers","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","member_ids","StartConversation","u","Chip","handleClick","avatar","Avatar","profile","image_url","EditProfile","profileForm","setProfileForm","spacing","bio","lastname","firstname","alignSelf","Slack","window","innerWidth","innerHeight","setChannels","setConversations","pr","pt","maxHeight","overflowY","Verification","hash","useParams","Reset","ProtectedRoute","redirectTo","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.2c14fa06.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Alert, Button, Grid, Paper, Snackbar, TextField, Typography} from \"@mui/material\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [signupForm, setSignupForm] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(undefined)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.post('/auth/signup', signupForm, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(() => navigate('/login'))\r\n            .catch(err => {\r\n                setErrorMessage(err.response.data.message)\r\n                setOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Grid item xs={12} container onSubmit={submitHandler}\r\n              component=\"form\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              minHeight=\"100vh\"\r\n              minWidth=\"100vw\"\r\n        >\r\n\r\n            <Paper style={{minWidth: \"19rem\"}} elevation={5}>\r\n\r\n                <Grid item xs={12} container direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"> <Typography style={{textAlign: 'center'}}\r\n                                                           sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                                           variant=\"h6\"\r\n                                                           component=\"div\"\r\n                                                           gutterBottom>Signup</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               id=\"outlined-basic\"\r\n                                               name=\"username\"\r\n                                               label=\"Username\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, username: e.target.value})}\r\n                /> </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"email\"\r\n                                               label=\"E-Mail\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, email: e.target.value})}\r\n\r\n                /> </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"password\"\r\n                                               type=\"password\"\r\n                                               label=\"Password\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, password: e.target.value})}\r\n\r\n                />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} textAlign=\"center\">\r\n                    <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Signup</Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h7\"\r\n                                component=\"div\">Do you have an\r\n                        account? <Link\r\n                            to=\"/login\">login</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nfunction AuthProviderWrapper(props) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [user, setUser] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const navigate = useNavigate();\r\n    const loginUser = token => {\r\n        localStorage.setItem('authToken', token)\r\n\r\n        verifyStoredToken();\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        localStorage.removeItem('authToken')\r\n\r\n        setIsLoggedIn(false)\r\n        setUser(null)\r\n    }\r\n\r\n    const verifyStoredToken = () => {\r\n        const storedToken = localStorage.getItem('authToken')\r\n        if (storedToken) {\r\n            axios.get('/auth/verify', {headers: {Authorization: `Bearer ${storedToken}`}})\r\n                .then(response => {\r\n                    const user = response.data\r\n                    setUser(user)\r\n                    setIsLoggedIn(true)\r\n                    setIsLoading(false)\r\n                    navigate(\"/\")\r\n                })\r\n                .catch(err => {\r\n                    setIsLoggedIn(false)\r\n                    setUser(null)\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        verifyStoredToken()\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{isLoggedIn, user, isLoading, loginUser, logoutUser}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport {AuthProviderWrapper, AuthContext}","import React, {useContext, useState} from \"react\";\r\nimport {Alert, Button, Grid, Paper, Snackbar, TextField, Typography} from \"@mui/material\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from '../../context/auth'\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const {loginUser} = useContext(AuthContext);\r\n\r\n    const [loginForm, setLoginForm] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(undefined)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/auth/login', loginForm, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                console.log(response.data.authToken)\r\n                const token = response.data.authToken\r\n                loginUser(token)\r\n                navigate('/')\r\n            })\r\n            .catch(err => {\r\n                setErrorMessage(err.response.data.message)\r\n                setOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Grid item xs={12} container onSubmit={submitHandler}\r\n              component=\"form\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              minHeight=\"100vh\"\r\n              minWidth=\"100vw\"\r\n        >\r\n\r\n            <Paper style={{minWidth: \"19rem\"}} elevation={5}>\r\n\r\n                <Grid item xs={12} container direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"> <Typography style={{textAlign: 'center'}}\r\n                                                           sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                                           variant=\"h6\"\r\n                                                           component=\"div\"\r\n                                                           gutterBottom>Login</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"email\"\r\n                                               label=\"E-Mail\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setLoginForm({...loginForm, email: e.target.value})}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"password\"\r\n                                               type=\"password\"\r\n                                               label=\"Password\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setLoginForm({...loginForm, password: e.target.value})}\r\n\r\n                />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} textAlign=\"center\">\r\n                    <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Login</Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h7\"\r\n                                component=\"div\">Don't have an account? <Link\r\n                        to=\"/signup\">signup</Link>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h9\"\r\n                                component=\"div\">Forgot your Password? <Link\r\n                        to=\"#password\">reset</Link></Typography>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useContext} from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Button,\r\n    CircularProgress,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Box from \"@mui/material/Box\";\r\nimport {AuthContext} from \"../../context/auth\";\r\n\r\nconst LeftSplit = ({channels, conversations, setConversationId, setChannelId}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    if (!channels) return <CircularProgress sx={{position: \"relative\", top: \"50%\", left: \"50%\"}} color=\"primary\"/>\r\n    return (\r\n        <>\r\n            <Accordion sx={{m: .5, backgroundColor: \"#032051db\", color: \"orange\"}}\r\n                       defaultExpanded={true}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon sx={{color: \"orange\"}}/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Channels</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <>\r\n                            {channels.map(channel => {\r\n                                return (\r\n                                    <Tooltip key={channel._id} title={channel.description} placement=\"top\">\r\n                                        <Button sx={{color: \"orange\"}}\r\n                                                onClick={() => {\r\n                                                    setChannelId(channel._id)\r\n                                                    setConversationId(null)\r\n                                                }}>\r\n                                            {`# - ${channel.name}`}\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                );\r\n                            })\r\n                            }\r\n                        </>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion sx={{m: .5, backgroundColor: \"#032051db\", color: \"yellow\"}}\r\n                       defaultExpanded={true}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon sx={{color: \"yellow\"}}/>}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography> Conversations</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <>\r\n                            {conversations && conversations.map(conversation => {\r\n                                return (\r\n                                    <Box key={conversation._id} sx={{display: \"flex\", width: \"100%\", pb: 1}}>\r\n                                        <img style={{width: '40px', borderRadius: '50%'}}\r\n                                             alt=\"\"\r\n                                             src=\"https://lh3.googleusercontent.com/ffFwGD7OMmSsvlcJmpKd5l5Y-wLwgcp7cYr5OG1AruAicX9QwROjNB29m9XIBlhHqmyVk644QTjZgj-haJ7ModBZdkr79dpg9Adc8Y4\"/>\r\n                                        <Button sx={{color: \"yellow\"}}\r\n                                                onClick={() => {\r\n                                                    setChannelId(null)\r\n                                                    setConversationId(conversation.user_1_id._id)\r\n                                                }\r\n                                                }>\r\n                                            {(user._id !== conversation.user_1_id._id) && `${conversation.user_1_id.username}` || `${conversation.user_2_id.username}`}\r\n                                        </Button>\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                            }\r\n                        </>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftSplit;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useContext, useState} from \"react\";\r\nimport {AuthContext} from \"../context/auth\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MessagePost({conversationId, channelId, post, setPost}) {\r\n\r\n    const {user} = useContext(AuthContext);\r\n    const [message, setMessage] = useState(\"\")\r\n    const storedToken = localStorage.getItem('authToken')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const requestBody = {\r\n            sender_id: user._id,\r\n            conversation_id: conversationId,\r\n            channel_id: channelId,\r\n            type: \"text\",\r\n            source: message\r\n        }\r\n        axios.put(`/message`, requestBody,{headers: {Authorization: `Bearer ${storedToken}`}} )\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPost(!post)\r\n                setMessage(\"\")\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            component=\"form\"\r\n            sx={{display: 'flex', alignItems: 'center', height: \"75px\", width: \"100%\", backgroundColor: \"#ffffffab\"}}\r\n            onSubmit={submitHandler}\r\n        >\r\n            <IconButton sx={{p: '10px'}} aria-label=\"menu\">\r\n                <MenuIcon/>\r\n            </IconButton>\r\n            <InputBase\r\n                autoComplete=\"off\"\r\n                sx={{ml: 1, flex: 1}}\r\n                placeholder=\"Message\"\r\n                name=\"message\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <Divider sx={{height: 28, m: 0.5}} orientation=\"vertical\"/>\r\n            <IconButton type={\"submit\"} color=\"primary\" sx={{p: '10px'}}>\r\n                <SendIcon/>\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, {useEffect, useState, useContext, useRef} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport MessagePost from \"../MessagePost\"\r\nimport {AuthContext} from \"../../context/auth\";\r\n\r\nconst RightSplit = ({channelId, conversationId}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [post, setPost] = useState(false);\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const changeDateFormat = (string) => {\r\n        const parsed = Date.parse(string)\r\n        const date = new Date(parsed)\r\n        return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()} - ${date.getHours()}:${date.getMinutes()}`\r\n    }\r\n    const storedToken = localStorage.getItem('authToken')\r\n\r\n    useEffect(() => {\r\n        channelId && axios.get(`message/${channelId}/channel`, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                setMessages(response.data)\r\n                console.log(\"MESSAGES\", messages)\r\n                scrollToBottom()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [channelId, post]);\r\n\r\n    useEffect(() => {\r\n        conversationId && axios.get(`message/${conversationId}/conversation`, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                setMessages(response.data)\r\n                scrollToBottom()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [conversationId, post]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Timeline sx={{color: \"white\", m: 0, p: 0}} position=\"right\">\r\n                {\r\n                    (messages.length !== 0) && messages.map(message => {\r\n                        return <TimelineItem key={message._id}\r\n                                             position={user._id === message.sender_id._id ? \"right\" : \"left\"}>\r\n                            <TimelineOppositeContent\r\n                                sx={{m: 'auto 0'}}\r\n                                align=\"right\"\r\n                                variant=\"body2\"\r\n                                color=\"white\"\r\n                                fontWeight={\"bold\"}\r\n                            >\r\n                                <div>\r\n                                    <p style={{color: \"orange\"}}>{message.sender_id && message.sender_id.username.toUpperCase()}</p>\r\n                                </div>\r\n                            </TimelineOppositeContent>\r\n                            <TimelineSeparator>\r\n                                <TimelineConnector/>\r\n                                <TimelineDot>\r\n                                    <img style={{width: '40px', borderRadius: '50%'}}\r\n                                         alt=\"\" src=\"https://lh3.googleusercontent.com/ffFwGD7OMmSsvlcJmpKd5l5Y-wLwgcp7cYr5OG1AruAicX9QwROjNB29m9XIBlhHqmyVk644QTjZgj-haJ7ModBZdkr79dpg9Adc8Y4\"/>\r\n                                </TimelineDot>\r\n                                <TimelineConnector/>\r\n                            </TimelineSeparator>\r\n                            <TimelineContent sx={{py: '12px', px: 2}}>\r\n                                <Typography variant=\"h6\" component=\"span\">\r\n                                    {message.source}\r\n                                </Typography>\r\n                                <Typography sx={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"orange\"\r\n                                }}>{changeDateFormat(message.updatedAt)}</Typography>\r\n                            </TimelineContent>\r\n                        </TimelineItem>\r\n                    })\r\n                }\r\n                <div style={{height: \"100px\"}} ref={messagesEndRef}/>\r\n            </Timeline>\r\n\r\n            <Grid item xs={12} sx={{\r\n                position: \"absolute\",\r\n                bottom: \"1rem\",\r\n                width: \"90%\",\r\n                pl: 2\r\n            }}\r\n            >{(channelId || conversationId) &&\r\n            <MessagePost channelId={channelId} conversationId={conversationId} post={post} setPost={setPost}\r\n                         sx={{m: 0, p: 0}}/>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RightSplit;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport {useContext} from 'react'\r\nimport {AuthContext} from '../context/auth'\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nexport default function Navigation({openEditProfileModel, setOpenEditProfileModel}) {\r\n    const {logoutUser} = useContext(AuthContext);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logoutUser();\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleShowProfile = () => {\r\n        setOpenEditProfileModel(!openEditProfileModel)\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleShowProfile}>Profile</MenuItem>\r\n            <Divider light/>\r\n            <MenuItem onClick={handleMenuClose}>Delete Account</MenuItem>\r\n            <Divider light/>\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar sx={{backgroundColor: \"#273f6a\"}}>\r\n                    <Box sx={{display: \"flex\", width: \"100%\", justifyContent: \"space-between\"}}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <Badge badgeContent={1} color=\"error\">\r\n                                <NotificationsIcon/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMenu}\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport {Grid} from \"@mui/material\";\r\n\r\n\r\nconst actions = [\r\n    {icon: <ChatIcon/>, name: 'Start Conversation', id: 1},\r\n    {icon: <GroupAddIcon/>, name: 'Create Channel', id: 2},\r\n];\r\n\r\nexport default function AddButton({\r\n                                      openAddChannelModel,\r\n                                      setOpenAddChannelModel,\r\n                                      openStartConversationModel,\r\n                                      setOpenStartConversationModel\r\n                                  }) {\r\n    return (\r\n        <Grid item lg={2} md={2} xs={12}>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial basic example\"\r\n                sx={{position: 'absolute', bottom: 16, right: 16}}\r\n                icon={<SpeedDialIcon/>}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        onClick={(e) => {\r\n                            action.id === 1 && setOpenAddChannelModel(!openAddChannelModel)\r\n                            action.id === 2 && setOpenStartConversationModel(!openStartConversationModel)\r\n                        }}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n        </Grid>\r\n    );\r\n}","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {useState} from \"react\";\r\n\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function SuggestionList({users, channelMembers, setChannelMembers}) {\r\n\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = useState([]);\r\n\r\n    const setMembers = (selectedUses) => {\r\n        const members = selectedUses.map(user => {\r\n            return user._id\r\n        })\r\n\r\n        setChannelMembers(members)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setMembers(value);\r\n        setPersonName(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl sx={{m: 1, width: 300}}>\r\n                <InputLabel>Users</InputLabel>\r\n                <Select\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<OutlinedInput label=\"Users\"/>}\r\n                >\r\n                    {users.map((user) => (\r\n                        <MenuItem\r\n                            key={user._id}\r\n                            value={user}\r\n                            style={getStyles(user.username, personName, theme)}\r\n                        >\r\n                            {user.username}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {TextField} from \"@mui/material\";\r\nimport {useState, useContext, useEffect} from \"react\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\nimport SuggestionList from \"../SuggestionList\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-30%, -50%)',\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    borderRadius: \"10px\",\r\n    bgcolor: \"white\",\r\n    border: '1px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function AddChannel({openAddChannelModel, setOpenAddChannelModel, submitted, setSubmitted}) {\r\n    const {user} = useContext(AuthContext);\r\n    const handleClose = () => setOpenAddChannelModel(false);\r\n    const [addChannelForm, setAddChannelForm] = useState({owner_id: user._id});\r\n    const [users, setUsers] = useState({});\r\n\r\n    const [channelMembers, setChannelMembers] = useState([])\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n\r\n    useEffect(() => {\r\n        axios.get('/user', {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => setUsers(response.data))\r\n            .catch(err => console.log(err))\r\n    }, [openAddChannelModel]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const requestBody = {...addChannelForm, member_ids: channelMembers}\r\n\r\n        axios.put('/channel', requestBody, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(() => {\r\n                setSubmitted(!submitted);\r\n                handleClose();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={openAddChannelModel}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={openAddChannelModel}>\r\n\r\n                    <Grid item xs={12} container sx={style} onSubmit={submitHandler}\r\n                          component=\"form\">\r\n\r\n                        <Grid item xs={12} container direction=\"column\"\r\n                              alignItems=\"center\"\r\n                              justifyContent=\"center\">\r\n                            <Typography style={{textAlign: 'center'}}\r\n                                        sx={{m: 1}}\r\n                                        variant=\"h6\"\r\n                                        component=\"div\"\r\n                                        color=\"primary\"\r\n                                        gutterBottom>Create your channel</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}> <TextField style={{width: '100%'}}\r\n                                                       sx={{m: 1}}\r\n                                                       name=\"name\"\r\n                                                       label=\"Name\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       onChange={e => setAddChannelForm({\r\n                                                           ...addChannelForm,\r\n                                                           name: e.target.value\r\n                                                       })}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={12}> <TextField style={{width: '100%'}} sx={{m: 1}}\r\n                                                       name=\"description\"\r\n                                                       type=\"text\"\r\n                                                       label=\"Description\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       onChange={e => setAddChannelForm({\r\n                                                           ...addChannelForm,\r\n                                                           description: e.target.value\r\n                                                       })}\r\n\r\n                        />\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <SuggestionList users={users}\r\n                                            channelMembers={channelMembers}\r\n                                            setChannelMembers={setChannelMembers}\r\n                                            style={{width: '100%'}} sx={{m: 1}}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Create</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport {Avatar, Chip} from \"@mui/material\";\r\nimport {useState, useContext, useEffect} from \"react\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-30%, -50%)',\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    borderRadius: \"10px\",\r\n    bgcolor: \"white\",\r\n    border: '1px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function StartConversation({\r\n                                              openStartConversationModel,\r\n                                              setOpenStartConversationModel,\r\n                                              submitted,\r\n                                              setSubmitted\r\n                                          }) {\r\n    const {user} = useContext(AuthContext);\r\n    const handleClose = () => setOpenStartConversationModel(false);\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n\r\n    useEffect(() => {\r\n        axios.get('/user', {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setUsers(response.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [openStartConversationModel]);\r\n\r\n    const handleClick = (id) => {\r\n\r\n        const requestBody = {user_1_id: user._id, user_2_id: id}\r\n        axios.put('/conversation', requestBody, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(() => {\r\n                setSubmitted(!submitted)\r\n                handleClose();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={openStartConversationModel}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={openStartConversationModel}>\r\n\r\n                    <Grid item xs={12} container sx={style}>\r\n\r\n                        {users.length !== 0 && users.map(u => {\r\n                            return user._id !== u._id && <Chip sx={{m: 1}} onClick={() => handleClick(u._id)}\r\n                                                               avatar={<Avatar alt=\"user\"\r\n                                                                               src={u.profile.image_url}/>}\r\n                                                               label={u.profile.username}\r\n                                                               variant=\"outlined\"\r\n                            />\r\n                        })}\r\n                    </Grid>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport Button from '@mui/material/Button';\r\nimport {TextField} from \"@mui/material\";\r\nimport {useState, useContext, useEffect} from \"react\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-30%, -50%)',\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    borderRadius: \"10px\",\r\n    bgcolor: \"white\",\r\n    border: '1px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function EditProfile({openEditProfileModel, setOpenEditProfileModel, submitted, setSubmitted}) {\r\n    const {user} = useContext(AuthContext);\r\n    const handleClose = () => setOpenEditProfileModel(false);\r\n    const [profileForm, setProfileForm] = useState({});\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n    console.log(storedToken)\r\n    useEffect(() => {\r\n        axios.get(`/user/${user._id}`, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                setProfileForm(response.data.profile)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [openEditProfileModel]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const requestBody = {\r\n            bio: profileForm.bio,\r\n            lastname: profileForm.lastname,\r\n            firstname: profileForm.firstname,\r\n            username: profileForm.username,\r\n            email: profileForm.email,\r\n        }\r\n        axios.post(`/profile/${profileForm._id}`, requestBody, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(() => {\r\n                setSubmitted(!submitted);\r\n                handleClose();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={openEditProfileModel}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={openEditProfileModel}>\r\n\r\n                    <Grid item xs={12} container sx={style} spacing={2} onSubmit={submitHandler}\r\n                          component=\"form\">\r\n\r\n                        <Grid item xs={2} sx={{alignSelf: \"center\"}}><img style={{width: '60px', borderRadius: '50%'}}\r\n                                                                          alt=\"\"\r\n                                                                          src={profileForm.image_url}/>\r\n                        </Grid>\r\n                        <Grid item xs={10}> <TextField style={{width: '100%'}}\r\n                                                       sx={{m: 1}}\r\n                                                       name=\"bio\"\r\n                                                       label=\"bio\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       value={profileForm.bio}\r\n                                                       onChange={e => setProfileForm({\r\n                                                           ...profileForm,\r\n                                                           bio: e.target.value\r\n                                                       })}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={6}> <TextField style={{width: '100%'}}\r\n                                                      sx={{m: 1}}\r\n                                                      name=\"firstname\"\r\n                                                      label=\"firstname\"\r\n                                                      variant=\"outlined\"\r\n                                                      autoComplete=\"off\"\r\n                                                      value={profileForm.firstname}\r\n                                                      onChange={e => setProfileForm({\r\n                                                          ...profileForm,\r\n                                                          firstname: e.target.value\r\n                                                      })}\r\n                        />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}> <TextField style={{width: '100%'}}\r\n                                                      sx={{m: 1}}\r\n                                                      name=\"lastname\"\r\n                                                      label=\"lastname\"\r\n                                                      variant=\"outlined\"\r\n                                                      autoComplete=\"off\"\r\n                                                      value={profileForm.lastname}\r\n                                                      onChange={e => setProfileForm({\r\n                                                          ...profileForm,\r\n                                                          lastname: e.target.value\r\n                                                      })}\r\n                        />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}> <TextField style={{width: '100%'}}\r\n                                                       sx={{m: 1}}\r\n                                                       name=\"email\"\r\n                                                       label=\"email\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       value={profileForm.email}\r\n                                                       onChange={e => setProfileForm({\r\n                                                           ...profileForm,\r\n                                                           email: e.target.value\r\n                                                       })}\r\n                        />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Update profile</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import React, {useEffect, useState, useContext} from \"react\";\r\nimport {Grid, Paper} from \"@mui/material\";\r\nimport LeftSplit from \"./LeftSplit\";\r\nimport RightSplit from \"./RightSplit\";\r\nimport Navigation from \"../Navigation\";\r\nimport AddButton from \"../AddButton\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\nimport AddChannel from \"../modals/AddChannel\";\r\nimport StartConversation from \"../modals/StartConversation\";\r\nimport EditProfile from \"../modals/EditProfile\";\r\n\r\nconst Slack = () => {\r\n    const {user} = useContext(AuthContext);\r\n    let {innerWidth: width, innerHeight: height} = window;\r\n    height -= 20;\r\n\r\n    const [channels, setChannels] = useState(null);\r\n    const [conversations, setConversations] = useState(null);\r\n    const [channelId, setChannelId] = useState(null);\r\n    const [conversationId, setConversationId] = useState(null);\r\n    const [openAddChannelModel, setOpenAddChannelModel] = useState(false);\r\n    const [openStartConversationModel, setOpenStartConversationModel] = useState(false);\r\n    const [openEditProfileModel, setOpenEditProfileModel] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false)\r\n\r\n    const storedToken = localStorage.getItem('authToken')\r\n    useEffect(() => {\r\n        axios.get(`/channel/${user._id}`, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                setChannels(response.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [submitted])\r\n\r\n    useEffect(() => {\r\n        axios.get(`/conversation/${user._id}`, {headers: {Authorization: `Bearer ${storedToken}`}})\r\n            .then(response => {\r\n                setConversations(response.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [submitted]);\r\n\r\n\r\n    return (\r\n        <Grid item\r\n              sx={{pl: 1, pr: 1, pt: 1, minHeight: height, maxHeight: height, height: \"100%\", position: \"relative\"}}\r\n              xs={12} spacing={1}\r\n              container>\r\n            <Grid item lg={3} md={3} xs={12} sx={{height: height}}>\r\n                <Paper\r\n                    sx={{maxHeight: height, height: \"100%\", backgroundColor: \"#032051db\", overflowY: \"overlay\"}}\r\n                    elevation={3}>\r\n                    <Navigation\r\n                        openEditProfileModel={openEditProfileModel}\r\n                        setOpenEditProfileModel={setOpenEditProfileModel}\r\n                    />\r\n                    <LeftSplit\r\n                        channels={channels}\r\n                        conversations={conversations}\r\n                        setConversationId={setConversationId}\r\n                        setChannelId={setChannelId}\r\n                    />\r\n                    <AddButton openAddChannelModel={openAddChannelModel}\r\n                               setOpenAddChannelModel={setOpenAddChannelModel}\r\n                               openStartConversationModel={openStartConversationModel}\r\n                               setOpenStartConversationModel={setOpenStartConversationModel}\r\n                               color=\"primary\" aria-label=\"add\"\r\n                               sx={{\r\n                                   backgroundColor: \"#3861a4b5\",\r\n                                   position: \"absolute\",\r\n                                   bottom: \"1rem\",\r\n                                   ml: \"10px\",\r\n                                   mt: \"-10px\",\r\n                               }}>\r\n                    </AddButton>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item lg={9} md={9} xs={12} sx={{height: height, position: \"relative\"}}>\r\n                <Paper sx={{maxHeight: height, height: \"100%\", backgroundColor: \"#032051db\", overflowY: \"overlay\"}}\r\n                       elevation={3}>\r\n                    <RightSplit\r\n                        channelId={channelId}\r\n                        conversationId={conversationId}\r\n                    />\r\n                    <AddChannel openAddChannelModel={openAddChannelModel}\r\n                                setOpenAddChannelModel={setOpenAddChannelModel}\r\n                                submitted={submitted} setSubmitted={setSubmitted}/>\r\n\r\n                    <StartConversation openStartConversationModel={openStartConversationModel}\r\n                                       setOpenStartConversationModel={setOpenStartConversationModel}\r\n                                       submitted={submitted} setSubmitted={setSubmitted}/>\r\n\r\n                    <EditProfile openEditProfileModel={openEditProfileModel}\r\n                                       setOpenEditProfileModel={setOpenEditProfileModel}\r\n                                       submitted={submitted} setSubmitted={setSubmitted}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Slack;","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Paper} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Verification = () => {\r\n    const {hash} = useParams();\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    useEffect(() => {\r\n        axios.get(`/auth/verification/${hash}`)\r\n            .then((response) => setMessage(response.data.message))\r\n            .catch(err => setErrorMessage('Unknown path'))\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Grid item sx={{m: 2}} alignSelf={\"center\"}>\r\n                {message && <Paper sx={{backgroundColor: \"#008000eb\", color: \"white\"}}><h1>{message}</h1></Paper>}\r\n                {errorMessage && <Paper sx={{backgroundColor: \"red\", color: \"white\"}}><h1>{errorMessage}</h1></Paper>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Verification;","import React from \"react\";\r\nimport {Grid} from \"@mui/material\";\r\n\r\n\r\nconst Reset = () => {\r\n\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Reset;","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../context/auth'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default function ProtectedRoute({ children, redirectTo }) {\r\n\r\n    const { isLoggedIn, isLoading } = useContext(AuthContext)\r\n    if (isLoading) return (<p>Is Loading ...</p>);\r\n    return isLoggedIn ? children : <Navigate to={redirectTo} />\r\n}","import './App.css';\nimport * as React from 'react';\nimport {Routes, Route} from \"react-router-dom\";\n\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Slack from \"./components/screenSplits/Slack\";\nimport Verification from \"./components/auth/Verification\";\nimport Reset from \"./components/auth/Reset\";\n\nimport {Grid} from \"@mui/material\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\n\nfunction App() {\n    return (\n        <Grid item xs={12} container>\n            <Routes>\n                <Route path=\"/signup\" element={<Signup/>}/>\n                <Route path=\"/login\" element={<Login/>}/>\n                <Route path=\"/auth/verification/:hash\" element={<Verification/>}/>\n                <Route path=\"/reset/:hash\" element={<Reset/>}/>\n                <Route\n                    path='/'\n                    element={\n                        <ProtectedRoute redirectTo='/login'>\n                            <Slack/>\n                        </ProtectedRoute>\n                    }\n                />\n            </Routes>\n        </Grid>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {AuthProviderWrapper} from './context/auth';\nimport {StyledEngineProvider} from '@mui/material/styles';\n\nReactDOM.render(\n    <BrowserRouter>\n        <AuthProviderWrapper>\n            <StyledEngineProvider injectFirst>\n                <App/>\n            </StyledEngineProvider>\n        </AuthProviderWrapper>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}