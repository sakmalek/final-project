{"version":3,"sources":["components/auth/Signup.js","context/auth.js","components/auth/Login.js","components/screenSplits/LeftSplit.js","components/MessagePost.js","components/screenSplits/RightSplit.js","components/Navigation.js","components/AddButton.js","components/SuggestionList.js","components/modals/AddChannelModal.js","components/screenSplits/Slack.js","components/auth/Verification.js","components/auth/Reset.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","navigate","useNavigate","useState","signupForm","setSignupForm","undefined","errorMessage","setErrorMessage","React","open","setOpen","handleClose","event","reason","Grid","item","xs","container","onSubmit","e","preventDefault","axios","post","then","catch","err","response","data","message","component","direction","alignItems","justifyContent","minHeight","minWidth","Paper","style","elevation","Typography","textAlign","sx","ml","mr","mt","mb","variant","gutterBottom","TextField","width","id","name","label","onChange","username","target","value","email","type","password","Button","to","Snackbar","autoHideDuration","onClose","Alert","severity","AuthContext","createContext","AuthProviderWrapper","props","isLoggedIn","setIsLoggedIn","user","setUser","isLoading","setIsLoading","verifyStoredToken","storedToken","localStorage","getItem","get","headers","Authorization","useEffect","Provider","loginUser","token","setItem","logoutUser","removeItem","children","Login","useContext","loginForm","setLoginForm","console","log","authToken","LeftSplit","channels","conversations","setConversationId","setChannelId","Accordion","m","backgroundColor","color","AccordionSummary","expandIcon","AccordionDetails","map","channel","Tooltip","title","description","placement","onClick","_id","defaultExpanded","conversation","Box","display","pb","borderRadius","alt","src","user_1_id","user_2_id","CircularProgress","position","top","left","MessagePost","conversationId","channelId","setPost","setMessage","height","requestBody","sender_id","conversation_id","channel_id","source","put","IconButton","p","InputBase","autoComplete","flex","placeholder","Divider","orientation","RightSplit","messages","setMessages","messagesEndRef","useRef","changeDateFormat","string","parsed","Date","parse","date","getDay","getMonth","getFullYear","getHours","getMinutes","scrollToBottom","current","scrollIntoView","behavior","Timeline","length","TimelineItem","TimelineOppositeContent","align","fontWeight","toUpperCase","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","fontSize","updatedAt","ref","bottom","pl","Navigation","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","light","flexGrow","AppBar","Toolbar","size","edge","currentTarget","Badge","badgeContent","actions","icon","AddButton","openAddChannelModel","setOpenAddChannelModel","lg","md","SpeedDial","ariaLabel","right","SpeedDialIcon","action","SpeedDialAction","tooltipTitle","getStyles","personName","theme","indexOf","typography","fontWeightRegular","fontWeightMedium","SuggestionList","users","setChannelMembers","channelMembers","useTheme","setPersonName","FormControl","InputLabel","Select","multiple","selectedUses","members","setMembers","split","input","OutlinedInput","transform","bgcolor","border","boxShadow","AddChannelModal","owner_id","addChannelForm","setAddChannelForm","setUsers","submitted","setSubmitted","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","member_ids","Slack","window","innerWidth","innerHeight","setChannels","setConversations","pr","pt","maxHeight","spacing","overflowY","Verification","Reset","ProtectedRoute","redirectTo","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.732f481d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Alert, Button, Grid, Paper, Snackbar, TextField, Typography} from \"@mui/material\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [signupForm, setSignupForm] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(undefined)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.post('/auth/signup', signupForm)\r\n            .then(() => navigate('/login'))\r\n            .catch(err => {\r\n                setErrorMessage(err.response.data.message)\r\n                setOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Grid item xs={12} container onSubmit={submitHandler}\r\n              component=\"form\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              minHeight=\"100vh\"\r\n              minWidth=\"100vw\"\r\n        >\r\n\r\n            <Paper style={{minWidth: \"19rem\"}} elevation={5}>\r\n\r\n                <Grid item xs={12} container direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"> <Typography style={{textAlign: 'center'}}\r\n                                                           sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                                           variant=\"h6\"\r\n                                                           component=\"div\"\r\n                                                           gutterBottom>Signup</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               id=\"outlined-basic\"\r\n                                               name=\"username\"\r\n                                               label=\"Username\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, username: e.target.value})}\r\n                /> </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"email\"\r\n                                               label=\"E-Mail\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, email: e.target.value})}\r\n\r\n                /> </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"password\"\r\n                                               type=\"password\"\r\n                                               label=\"Password\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setSignupForm({...signupForm, password: e.target.value})}\r\n\r\n                />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} textAlign=\"center\">\r\n                    <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Signup</Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h7\"\r\n                                component=\"div\">Do you have an\r\n                        account? <Link\r\n                            to=\"/login\">login</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nfunction AuthProviderWrapper(props) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [user, setUser] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const navigate = useNavigate();\r\n    const loginUser = token => {\r\n        localStorage.setItem('authToken', token)\r\n\r\n        verifyStoredToken();\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        localStorage.removeItem('authToken')\r\n\r\n        setIsLoggedIn(false)\r\n        setUser(null)\r\n    }\r\n\r\n    const verifyStoredToken = () => {\r\n        const storedToken = localStorage.getItem('authToken')\r\n        if (storedToken) {\r\n            axios.get('/auth/verify', {headers: {Authorization: `Bearer ${storedToken}`}})\r\n                .then(response => {\r\n                    const user = response.data\r\n                    setUser(user)\r\n                    setIsLoggedIn(true)\r\n                    setIsLoading(false)\r\n                    navigate(\"/\")\r\n                })\r\n                .catch(err => {\r\n                    setIsLoggedIn(false)\r\n                    setUser(null)\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        verifyStoredToken()\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{isLoggedIn, user, isLoading, loginUser, logoutUser}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport {AuthProviderWrapper, AuthContext}","import React, {useContext, useState} from \"react\";\r\nimport {Alert, Button, Grid, Paper, Snackbar, TextField, Typography} from \"@mui/material\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from '../../context/auth'\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const {loginUser} = useContext(AuthContext);\r\n\r\n    const [loginForm, setLoginForm] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(undefined)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/auth/login', loginForm)\r\n            .then(response => {\r\n                console.log(response.data.authToken)\r\n                const token = response.data.authToken\r\n                loginUser(token)\r\n                navigate('/')\r\n            })\r\n            .catch(err => {\r\n                setErrorMessage(err.response.data.message)\r\n                setOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Grid item xs={12} container onSubmit={submitHandler}\r\n              component=\"form\"\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              minHeight=\"100vh\"\r\n              minWidth=\"100vw\"\r\n        >\r\n\r\n            <Paper style={{minWidth: \"19rem\"}} elevation={5}>\r\n\r\n                <Grid item xs={12} container direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"> <Typography style={{textAlign: 'center'}}\r\n                                                           sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                                           variant=\"h6\"\r\n                                                           component=\"div\"\r\n                                                           gutterBottom>Login</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"email\"\r\n                                               label=\"E-Mail\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setLoginForm({...loginForm, email: e.target.value})}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12}> <TextField style={{width: '16rem'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}}\r\n                                               name=\"password\"\r\n                                               type=\"password\"\r\n                                               label=\"Password\"\r\n                                               variant=\"outlined\"\r\n                                               onChange={e => setLoginForm({...loginForm, password: e.target.value})}\r\n\r\n                />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} textAlign=\"center\">\r\n                    <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Login</Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h7\"\r\n                                component=\"div\">Don't have an account? <Link\r\n                        to=\"/signup\">signup</Link>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{textAlign: 'center'}} sx={{ml: 3, mr: 3, mt: 1, mb: 1}} variant=\"h9\"\r\n                                component=\"div\">Forgot your Password? <Link\r\n                        to=\"#password\">reset</Link></Typography>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useContext} from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Button,\r\n    CircularProgress,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Box from \"@mui/material/Box\";\r\nimport {AuthContext} from \"../../context/auth\";\r\n\r\nconst LeftSplit = ({channels, conversations, setConversationId, setChannelId}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    if (!channels) return <CircularProgress sx={{position: \"relative\", top: \"50%\", left: \"50%\"}} color=\"primary\"/>\r\n    return (\r\n        <>\r\n            <Accordion sx={{m: .5, backgroundColor: \"#032051db\", color: \"orange\"}}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon sx={{color: \"orange\"}}/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Channels</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <>\r\n                            {channels.map(channel => {\r\n                                return (\r\n                                    <Tooltip key={channel._id} title={channel.description} placement=\"top\">\r\n                                        <Button sx={{color: \"orange\"}}\r\n                                                onClick={() => {\r\n                                                    setChannelId(channel._id)\r\n                                                    setConversationId(null)\r\n                                                }}>\r\n                                            {`# - ${channel.name}`}\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                );\r\n                            })\r\n                            }\r\n                        </>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion sx={{m: .5, backgroundColor: \"#032051db\", color: \"yellow\"}}\r\n                       defaultExpanded={true}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon sx={{color: \"yellow\"}}/>}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography> Conversations</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <>\r\n                            {conversations && conversations.map(conversation => {\r\n                                return (\r\n                                    <Box key={conversation._id} sx={{display: \"flex\", width: \"100%\", pb: 1}}>\r\n                                        <img style={{width: '40px', borderRadius: '50%'}}\r\n                                             alt=\"\"\r\n                                             src=\"https://lh3.googleusercontent.com/ffFwGD7OMmSsvlcJmpKd5l5Y-wLwgcp7cYr5OG1AruAicX9QwROjNB29m9XIBlhHqmyVk644QTjZgj-haJ7ModBZdkr79dpg9Adc8Y4\"/>\r\n                                        <Button sx={{color: \"yellow\"}}\r\n                                                onClick={() => {\r\n                                                    setChannelId(null)\r\n                                                    setConversationId(conversation.user_1_id._id)\r\n                                                }\r\n                                                }>\r\n                                            {(user._id !== conversation.user_1_id._id) && `${conversation.user_1_id.username}` || `${conversation.user_2_id.username}`}\r\n                                        </Button>\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                            }\r\n                        </>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftSplit;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useContext, useState} from \"react\";\r\nimport {AuthContext} from \"../context/auth\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MessagePost({conversationId, channelId, post, setPost}) {\r\n\r\n    const {user} = useContext(AuthContext);\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const requestBody = {\r\n            sender_id: user._id,\r\n            conversation_id: conversationId,\r\n            channel_id: channelId,\r\n            type: \"text\",\r\n            source: message\r\n        }\r\n        axios.put(`/message`, requestBody)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPost(!post)\r\n                setMessage(\"\")\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            component=\"form\"\r\n            sx={{display: 'flex', alignItems: 'center', height: \"75px\", width: \"100%\", backgroundColor: \"#ffffffab\"}}\r\n            onSubmit={submitHandler}\r\n        >\r\n            <IconButton sx={{p: '10px'}} aria-label=\"menu\">\r\n                <MenuIcon/>\r\n            </IconButton>\r\n            <InputBase\r\n                autoComplete=\"off\"\r\n                sx={{ml: 1, flex: 1}}\r\n                placeholder=\"Message\"\r\n                name=\"message\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <Divider sx={{height: 28, m: 0.5}} orientation=\"vertical\"/>\r\n            <IconButton type={\"submit\"} color=\"primary\" sx={{p: '10px'}}>\r\n                <SendIcon/>\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, {useEffect, useState, useContext, useRef} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport MessagePost from \"../MessagePost\"\r\nimport {AuthContext} from \"../../context/auth\";\r\n\r\nconst RightSplit = ({channelId, conversationId}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [post, setPost] = useState(false);\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const changeDateFormat = (string) => {\r\n        const parsed = Date.parse(string)\r\n        const date = new Date(parsed)\r\n        return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()} - ${date.getHours()}:${date.getMinutes()}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        channelId && axios.get(`message/${channelId}/channel`)\r\n            .then(response => {\r\n                setMessages(response.data)\r\n                console.log(\"MESSAGES\", messages)\r\n                scrollToBottom()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [channelId, post]);\r\n\r\n    useEffect(() => {\r\n        conversationId && axios.get(`message/${conversationId}/conversation`)\r\n            .then(response => {\r\n                setMessages(response.data)\r\n                scrollToBottom()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [conversationId, post]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Timeline sx={{color: \"white\", m: 0, p: 0}} position=\"right\">\r\n                {\r\n                    (messages.length !== 0) && messages.map(message => {\r\n                        return <TimelineItem key={message._id}\r\n                                             position={user._id === message.sender_id._id ? \"right\" : \"left\"}>\r\n                            <TimelineOppositeContent\r\n                                sx={{m: 'auto 0'}}\r\n                                align=\"right\"\r\n                                variant=\"body2\"\r\n                                color=\"white\"\r\n                                fontWeight={\"bold\"}\r\n                            >\r\n                                <div>\r\n                                    <p style={{color: \"orange\"}}>{message.sender_id && message.sender_id.username.toUpperCase()}</p>\r\n                                </div>\r\n                            </TimelineOppositeContent>\r\n                            <TimelineSeparator>\r\n                                <TimelineConnector/>\r\n                                <TimelineDot>\r\n                                    <img style={{width: '40px', borderRadius: '50%'}}\r\n                                         alt=\"\" src=\"https://lh3.googleusercontent.com/ffFwGD7OMmSsvlcJmpKd5l5Y-wLwgcp7cYr5OG1AruAicX9QwROjNB29m9XIBlhHqmyVk644QTjZgj-haJ7ModBZdkr79dpg9Adc8Y4\"/>\r\n                                </TimelineDot>\r\n                                <TimelineConnector/>\r\n                            </TimelineSeparator>\r\n                            <TimelineContent sx={{py: '12px', px: 2}}>\r\n                                <Typography variant=\"h6\" component=\"span\">\r\n                                    {message.source}\r\n                                </Typography>\r\n                                <Typography sx={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"orange\"\r\n                                }}>{changeDateFormat(message.updatedAt)}</Typography>\r\n                            </TimelineContent>\r\n                        </TimelineItem>\r\n                    })\r\n                }\r\n                <div style={{height: \"100px\"}} ref={messagesEndRef}/>\r\n            </Timeline>\r\n\r\n            <Grid item xs={12} sx={{\r\n                position: \"absolute\",\r\n                bottom: \"1rem\",\r\n                width: \"90%\",\r\n                pl: 2\r\n            }}\r\n            >{(channelId || conversationId) &&\r\n            <MessagePost channelId={channelId} conversationId={conversationId} post={post} setPost={setPost}\r\n                         sx={{m: 0, p: 0}}/>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RightSplit;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport {useContext} from 'react'\r\nimport {AuthContext} from '../context/auth'\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nexport default function Navigation() {\r\n    const {logoutUser} = useContext(AuthContext);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logoutUser();\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <Divider light/>\r\n            <MenuItem onClick={handleMenuClose}>Delete Account</MenuItem>\r\n            <Divider light/>\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar sx={{backgroundColor: \"#273f6a\"}}>\r\n                    <Box sx={{display: \"flex\", width: \"100%\", justifyContent: \"space-between\"}}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <Badge badgeContent={1} color=\"error\">\r\n                                <NotificationsIcon/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMenu}\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport {Grid} from \"@mui/material\";\r\n\r\n\r\nconst actions = [\r\n    {icon: <ChatIcon/>, name: 'Start Conversation', id: 1},\r\n    {icon: <GroupAddIcon/>, name: 'Create Channel', id: 2},\r\n];\r\n\r\nexport default function AddButton({openAddChannelModel, setOpenAddChannelModel}) {\r\n    return (\r\n        <Grid item lg={2} md={2} xs={12}>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial basic example\"\r\n                sx={{position: 'absolute', bottom: 16, right: 16}}\r\n                icon={<SpeedDialIcon/>}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        onClick={(e) => {\r\n                            action.id === 1 && setOpenAddChannelModel(!openAddChannelModel)\r\n                        }}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n        </Grid>\r\n    );\r\n}","import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {useState} from \"react\";\r\n\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function SuggestionList({users, channelMembers, setChannelMembers}) {\r\n\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = useState([]);\r\n\r\n    const setMembers = (selectedUses) => {\r\n        const members = selectedUses.map(user => {\r\n            return user._id\r\n        })\r\n\r\n        setChannelMembers(members)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setMembers(value);\r\n        setPersonName(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl sx={{m: 1, width: 300}}>\r\n                <InputLabel>Users</InputLabel>\r\n                <Select\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<OutlinedInput label=\"Users\"/>}\r\n                >\r\n                    {users.map((user) => (\r\n                        <MenuItem\r\n                            key={user._id}\r\n                            value={user}\r\n                            style={getStyles(user.username, personName, theme)}\r\n                        >\r\n                            {user.username}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {TextField} from \"@mui/material\";\r\nimport {useState, useContext, useEffect} from \"react\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\nimport SuggestionList from \"../SuggestionList\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-30%, -50%)',\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    borderRadius: \"10px\",\r\n    bgcolor: \"white\",\r\n    border: '1px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function AddChannelModal({openAddChannelModel, setOpenAddChannelModel}) {\r\n    const {user} = useContext(AuthContext);\r\n    const handleClose = () => setOpenAddChannelModel(false);\r\n    const [addChannelForm, setAddChannelForm] = useState({owner_id: user._id});\r\n    const [users, setUsers] = useState({});\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [channelMembers, setChannelMembers] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('/user')\r\n            .then(response => setUsers(response.data))\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const requestBody = {...addChannelForm, member_ids: channelMembers}\r\n\r\n        axios.put('/channel', requestBody)\r\n            .then(() => {\r\n                setSubmitted(!submitted);\r\n                handleClose();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={openAddChannelModel}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={openAddChannelModel}>\r\n\r\n                    <Grid item xs={12} container sx={style} onSubmit={submitHandler}\r\n                          component=\"form\">\r\n\r\n                        <Grid item xs={12} container direction=\"column\"\r\n                              alignItems=\"center\"\r\n                              justifyContent=\"center\">\r\n                            <Typography style={{textAlign: 'center'}}\r\n                                        sx={{m: 1}}\r\n                                        variant=\"h6\"\r\n                                        component=\"div\"\r\n                                        color=\"primary\"\r\n                                        gutterBottom>Create your channel</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}> <TextField style={{width: '100%'}}\r\n                                                       sx={{m: 1}}\r\n                                                       name=\"name\"\r\n                                                       label=\"Name\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       onChange={e => setAddChannelForm({\r\n                                                           ...addChannelForm,\r\n                                                           name: e.target.value\r\n                                                       })}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={12}> <TextField style={{width: '100%'}} sx={{m: 1}}\r\n                                                       name=\"description\"\r\n                                                       type=\"text\"\r\n                                                       label=\"Description\"\r\n                                                       variant=\"outlined\"\r\n                                                       autoComplete=\"off\"\r\n                                                       onChange={e => setAddChannelForm({\r\n                                                           ...addChannelForm,\r\n                                                           description: e.target.value\r\n                                                       })}\r\n\r\n                        />\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <SuggestionList users={users}\r\n                                            channelMembers={channelMembers}\r\n                                            setChannelMembers={setChannelMembers}\r\n                                            style={{width: '100%'}} sx={{m: 1}}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Button sx={{ml: 3, mr: 3, mt: 1, mb: 1}} type=\"submit\">Create</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import React, {useEffect, useState, useContext} from \"react\";\r\nimport {Fab, Grid, Paper} from \"@mui/material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport LeftSplit from \"./LeftSplit\";\r\nimport RightSplit from \"./RightSplit\";\r\nimport Navigation from \"../Navigation\";\r\nimport AddButton from \"../AddButton\";\r\nimport {AuthContext} from \"../../context/auth\";\r\nimport axios from \"axios\";\r\nimport AddChannelModal from \"../modals/AddChannelModal\";\r\n\r\n\r\nconst Slack = () => {\r\n    const {user} = useContext(AuthContext);\r\n    let {innerWidth: width, innerHeight: height} = window;\r\n    height -= 20;\r\n\r\n    const [channels, setChannels] = useState(null);\r\n    const [conversations, setConversations] = useState(null);\r\n    const [channelId, setChannelId] = useState(null);\r\n    const [conversationId, setConversationId] = useState(null);\r\n    const [openAddChannelModel, setOpenAddChannelModel] = React.useState(false);\r\n    useEffect(() => {\r\n        axios.get(`/channel/${user._id}`)\r\n            .then(response => {\r\n                setChannels(response.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(`/conversation/${user._id}`)\r\n            .then(response => {\r\n                setConversations(response.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Grid item\r\n              sx={{pl: 1, pr: 1, pt: 1, minHeight: height, maxHeight: height, height: \"100%\", position: \"relative\"}}\r\n              xs={12} spacing={1}\r\n              container>\r\n            <Grid item lg={3} md={3} xs={12} sx={{height: height}}>\r\n                <Paper\r\n                    sx={{maxHeight: height, height: \"100%\", backgroundColor: \"#032051db\", overflowY: \"overlay\"}}\r\n                    elevation={3}>\r\n                    <Navigation/>\r\n                    <LeftSplit\r\n                        channels={channels}\r\n                        conversations={conversations}\r\n                        setConversationId={setConversationId}\r\n                        setChannelId={setChannelId}\r\n                    />\r\n                    <AddButton openAddChannelModel={openAddChannelModel}\r\n                               setOpenAddChannelModel={setOpenAddChannelModel}\r\n                               color=\"primary\" aria-label=\"add\"\r\n                               sx={{\r\n                                   backgroundColor: \"#3861a4b5\",\r\n                                   position: \"absolute\",\r\n                                   bottom: \"1rem\",\r\n                                   ml: \"10px\",\r\n                                   mt: \"-10px\",\r\n                               }}>\r\n                    </AddButton>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item lg={9} md={9} xs={12} sx={{height: height, position: \"relative\"}}>\r\n                <Paper sx={{maxHeight: height, height: \"100%\", backgroundColor: \"#032051db\", overflowY: \"overlay\"}}\r\n                       elevation={3}>\r\n                    <RightSplit\r\n                        channelId={channelId}\r\n                        conversationId={conversationId}\r\n                    />\r\n                    <AddChannelModal openAddChannelModel={openAddChannelModel}\r\n                                     setOpenAddChannelModel={setOpenAddChannelModel}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Slack;","import React from \"react\";\r\nimport {Grid} from \"@mui/material\";\r\n\r\n\r\nconst Verification = () => {\r\n\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Verification;","import React from \"react\";\r\nimport {Grid} from \"@mui/material\";\r\n\r\n\r\nconst Reset = () => {\r\n\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Reset;","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../context/auth'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default function ProtectedRoute({ children, redirectTo }) {\r\n\r\n    const { isLoggedIn, isLoading } = useContext(AuthContext)\r\n    if (isLoading) return (<p>Is Loading ...</p>);\r\n    return isLoggedIn ? children : <Navigate to={redirectTo} />\r\n}","import './App.css';\nimport * as React from 'react';\nimport {Routes, Route} from \"react-router-dom\";\n\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Slack from \"./components/screenSplits/Slack\";\nimport Verification from \"./components/auth/Verification\";\nimport Reset from \"./components/auth/Reset\";\n\nimport {Grid} from \"@mui/material\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\n\nfunction App() {\n    return (\n        <Grid item xs={12} container>\n            <Routes>\n                <Route path=\"/signup\" element={<Signup/>}/>\n                <Route path=\"/login\" element={<Login/>}/>\n                <Route path=\"/verification/:hash\" element={<Verification/>}/>\n                <Route path=\"/reset/:hash\" element={<Reset/>}/>\n                <Route\n                    path='/'\n                    element={\n                        <ProtectedRoute redirectTo='/login'>\n                            <Slack/>\n                        </ProtectedRoute>\n                    }\n                />\n            </Routes>\n        </Grid>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {AuthProviderWrapper} from './context/auth';\nimport {StyledEngineProvider} from '@mui/material/styles';\n\nReactDOM.render(\n    <BrowserRouter>\n        <AuthProviderWrapper>\n            <StyledEngineProvider injectFirst>\n                <App/>\n            </StyledEngineProvider>\n        </AuthProviderWrapper>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}